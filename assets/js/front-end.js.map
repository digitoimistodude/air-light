{"mappings":"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","sources":["js/src/front-end.js","node_modules/reframe.js/dist/reframe.es.js","js/src/modules/external-link.js","js/src/modules/localization.js","js/src/modules/anchors.js","node_modules/moveto/dist/moveTo.js","js/src/modules/top.js","js/src/modules/a11y-skip-link.js","js/src/modules/a11y-focus-search-field.js","js/src/modules/navigation.js","js/src/modules/navigation/add-multiple-event-listeners.js","js/src/modules/navigation/calculate-burger-menu-position.js","js/src/modules/navigation/a11y-focus-trap.js","js/src/modules/navigation/calculate-dropdown-toggle-height.js","js/src/modules/navigation/check-for-submenu-overflow.js","js/src/modules/navigation/is-out-of-viewport.js","js/src/modules/navigation/dropdown-menu-on-hover.js","js/src/modules/navigation/a11y-add-dropdown-toggle-labels.js","js/src/modules/navigation/a11y-dropdown-menu-keyboard-navigation.js","js/src/modules/navigation/convert-dropdown-menu-items.js","js/src/modules/navigation/close-sub-menu-handler.js","js/src/modules/navigation/close-sub-menu.js","js/src/modules/navigation/a11y-add-dropdown-toggle-labels-click.js","js/src/modules/navigation/a11y-dropdown-menu-keyboard-navigation-click.js"],"sourcesContent":["/* eslint-disable max-len, no-param-reassign, no-unused-vars */\n/**\n * Air theme JavaScript.\n */\n\n// Import modules\nimport reframe from 'reframe.js';\nimport { styleExternalLinks, initExternalLinkLabels } from './modules/external-link';\nimport initAnchors from './modules/anchors';\nimport backToTop from './modules/top';\nimport initA11ySkipLink from './modules/a11y-skip-link';\nimport initA11yFocusSearchField from './modules/a11y-focus-search-field';\nimport {\n  navSticky, navClick, navDesktop, navMobile,\n} from './modules/navigation';\n\n// Define Javascript is active by changing the body class\ndocument.body.classList.remove('no-js');\ndocument.body.classList.add('js');\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  initAnchors();\n  backToTop();\n  styleExternalLinks();\n  initExternalLinkLabels();\n  initA11ySkipLink();\n  initA11yFocusSearchField();\n\n  // Init navigation\n  // If you want to enable click based navigation, comment navDesktop() and uncomment navClick()\n  // Remember to enable styles in sass/navigation/navigation.scss\n  navDesktop();\n  // navClick();\n  navMobile();\n\n  // Uncomment if you like to use a sticky navigation\n  // navSticky();\n\n  // Fit video embeds to container\n  reframe('.wp-has-aspect-ratio iframe');\n});\n","/**\n  reframe.js - Reframe.js: responsive iframes for embedded content\n  @version v4.0.2\n  @link https://github.com/yowainwright/reframe.ts#readme\n  @author Jeff Wainwright <yowainwright@gmail.com> (http://jeffry.in)\n  @license MIT\n**/\n/**\n * REFRAME.TS 🖼\n * ---\n * @param target\n * @param cName\n * @summary defines the height/width ratio of the targeted <element>\n */\nfunction reframe(target, cName) {\n    var _a, _b;\n    var frames = typeof target === 'string' ? document.querySelectorAll(target) : target;\n    var c = cName || 'js-reframe';\n    if (!('length' in frames))\n        frames = [frames];\n    for (var i = 0; i < frames.length; i += 1) {\n        var frame = frames[i];\n        var hasClass = frame.className.split(' ').indexOf(c) !== -1;\n        if (hasClass || frame.style.width.indexOf('%') > -1) {\n            return;\n        }\n        // get height width attributes\n        var height = frame.getAttribute('height') || frame.offsetHeight;\n        var width = frame.getAttribute('width') || frame.offsetWidth;\n        var heightNumber = typeof height === 'string' ? parseInt(height) : height;\n        var widthNumber = typeof width === 'string' ? parseInt(width) : width;\n        // general targeted <element> sizes\n        var padding = (heightNumber / widthNumber) * 100;\n        // created element <wrapper> of general reframed item\n        // => set necessary styles of created element <wrapper>\n        var div = document.createElement('div');\n        div.className = c;\n        var divStyles = div.style;\n        divStyles.position = 'relative';\n        divStyles.width = '100%';\n        divStyles.paddingTop = \"\".concat(padding, \"%\");\n        // set necessary styles of targeted <element>\n        var frameStyle = frame.style;\n        frameStyle.position = 'absolute';\n        frameStyle.width = '100%';\n        frameStyle.height = '100%';\n        frameStyle.left = '0';\n        frameStyle.top = '0';\n        // reframe targeted <element>\n        (_a = frame.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(div, frame);\n        (_b = frame.parentNode) === null || _b === void 0 ? void 0 : _b.removeChild(frame);\n        div.appendChild(frame);\n    }\n}\n\nexport { reframe as default };\n","/* eslint-disable no-param-reassign */\nimport getLocalization from './localization';\n\nfunction isLinkExternal(link, localDomains) {\n  // Empty links are not external\n  if (!link.length) {\n    return false;\n  }\n\n  const exceptions = [\n    '#',\n    'tel:',\n    'mailto:',\n    '/',\n  ];\n\n  // Check if the url starts with some of the exceptions\n  const isException = exceptions.some((exception) => {\n    const compare = new RegExp(`^${exception}`, 'g');\n    return compare.test(link);\n  });\n\n  if (isException) {\n    return false;\n  }\n\n  let linkUrl;\n  try {\n    linkUrl = new URL(link);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(`Invalid URL: ${link}`);\n    return false;\n  }\n  // Check if host is one of the local domains\n  return !localDomains.some((domain) => linkUrl.host === domain);\n}\n\n/**\n  * Try to get image alt texts from inside a link\n  * to use in aria-label, when only elements inside\n  * of link are images\n  * @param {*} link DOM link element\n  * @returns string\n  */\nexport function getChildAltText(link) {\n  const children = [...link.children];\n\n  if (children.length === 0) {\n    return '';\n  }\n\n  const childImgs = children.filter((child) => child.tagName.toLowerCase() === 'img');\n\n  // If there are other elements than img elements, no need to add aria-label\n  if (children.length !== childImgs.length) {\n    return '';\n  }\n\n  // Find alt texts and add to array\n  const altTexts = childImgs.filter((child) => child.alt && child.alt !== '').map((child) => child.alt);\n\n  // If there is no alt texts,\n  if (!altTexts.length) {\n    return '';\n  }\n\n  return altTexts.join(', ');\n}\n\nexport function styleExternalLinks() {\n  let localDomains = [\n    window.location.host,\n  ];\n\n  if (typeof window.air_light_externalLinkDomains !== 'undefined') {\n    localDomains = localDomains.concat(window.air_light_externalLinkDomains);\n  }\n\n  const links = document.querySelectorAll('a');\n\n  const externalLinks = [...links].filter((link) => isLinkExternal(link.href, localDomains));\n\n  // eslint-disable-next-line consistent-return\n  externalLinks.forEach((externalLink) => {\n    // Abort mission if there is only img element inside of link\n    if (externalLink.childElementCount === 1 && externalLink.children[0].tagName.toLowerCase() === 'img') {\n      return false;\n    }\n\n    if (!externalLink.classList.contains('no-external-link-label')) {\n      const textContent = externalLink.textContent.trim().length\n        ? externalLink.textContent.trim() : getChildAltText(externalLink);\n      if (textContent && !externalLink.getAttribute('aria-label')) {\n        const ariaLabel = externalLink.target === '_blank' ? `${textContent}: ${getLocalization('external_link')}, ${getLocalization('target_blank')}` : `${textContent}: ${getLocalization('external_link')}`;\n        externalLink.setAttribute('aria-label', ariaLabel);\n      }\n    }\n\n    // Arrow icon won't be added if one of these classes is defined for the link\n    const classExceptions = [\n      'no-external-link-indicator',\n      'global-link',\n      'button',\n    ];\n\n    if (!classExceptions.some((className) => externalLink.classList.contains(className))) {\n      // Add SVG arrow icon\n      externalLink.insertAdjacentHTML('beforeend', '<svg class=\"external-link-icon\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 9 9\"><path d=\"M4.499 1.497h4v4m0-4l-7 7\" fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>');\n      externalLink.classList.add('is-external-link');\n    }\n  });\n}\n\nexport function initExternalLinkLabels() {\n  // Add aria-labels to links without text or aria-labels and contain image with alt text\n  const links = [...document.querySelectorAll('a')];\n  // eslint-disable-next-line no-unused-vars\n  const linksWithImgChildren = links.forEach((link) => {\n    // If link already has text content or an aria label no need to add aria-label\n    if (link.textContent.trim() !== '' || link.ariaLabel) {\n      return;\n    }\n\n    const ariaLabel = getChildAltText(link);\n    if (ariaLabel !== '') {\n      link.ariaLabel = ariaLabel;\n    }\n  });\n}\n","export default function getLocalization(stringKey) {\n  if (typeof window.air_light_screenReaderText === 'undefined' || typeof window.air_light_screenReaderText[stringKey] === 'undefined') {\n    // eslint-disable-next-line no-console\n    console.error(`Missing translation for ${stringKey}`);\n    return '';\n  }\n  return window.air_light_screenReaderText[stringKey];\n}\n","/* eslint-disable no-param-reassign, no-undef */\n\nimport MoveTo from 'moveto';\n\nconst initAnchors = () => {\n  const easeFunctions = {\n    easeInQuad(t, b, c, d) { t /= d; return c * t * t + b; },\n    easeOutQuad(t, b, c, d) { t /= d; return -c * t * (t - 2) + b; },\n  };\n\n  const moveTo = new MoveTo(\n    { ease: 'easeInQuad' },\n    easeFunctions,\n  );\n\n  let triggers = document.querySelectorAll('a[href*=\"#\"]:not([href=\"#\"]):not(#top)');\n\n  triggers = Array.from(triggers);\n\n  triggers.forEach((trigger) => {\n    moveTo.registerTrigger(trigger);\n    const targetId = trigger.hash.substring(1);\n    const target = document.getElementById(targetId);\n\n    trigger.addEventListener('click', (event) => {\n      event.preventDefault(); // Prevent default behavior of anchor links\n\n      // If the trigger is nav-link, close nav\n      if (trigger.classList.contains('nav-link') || trigger.classList.contains('dropdown-item')) {\n        document.body.classList.remove('js-nav-active');\n\n        // Additional navigation cleanup\n        const html = document.documentElement;\n        const container = document.getElementById('main-navigation-wrapper');\n        const menu = container?.querySelector('ul');\n        const button = document.getElementById('nav-toggle');\n\n        if (html) html.classList.remove('disable-scroll');\n        if (container) container.classList.remove('is-active');\n        if (button) {\n          button.classList.remove('is-active');\n          button.setAttribute('aria-expanded', 'false');\n        }\n        if (menu) menu.setAttribute('aria-expanded', 'false');\n      }\n\n      // Check if the target element exists on the current page\n      if (target) {\n        // Scroll to the target element\n        moveTo.move(target);\n\n        // Update URL history\n        window.history.pushState('', '', trigger.hash);\n\n        // Focus on the target element after a delay\n        setTimeout(() => {\n          target.setAttribute('tabindex', '-1');\n          target.focus();\n        }, 500);\n      } else {\n        // Navigate to the target page\n        window.location.href = trigger.href;\n      }\n    });\n  });\n};\n\nexport default initAnchors;\n","/*!\n * MoveTo - A lightweight scroll animation javascript library without any dependency.\n * Version 1.8.2 (28-06-2019 14:30)\n * Licensed under MIT\n * Copyright 2019 Hasan Aydoğdu <hsnaydd@gmail.com>\n */\n\n\"use strict\";\n\nvar MoveTo = function () {\n  /**\n   * Defaults\n   * @type {object}\n   */\n  var defaults = {\n    tolerance: 0,\n    duration: 800,\n    easing: 'easeOutQuart',\n    container: window,\n    callback: function callback() {}\n  };\n  /**\n   * easeOutQuart Easing Function\n   * @param  {number} t - current time\n   * @param  {number} b - start value\n   * @param  {number} c - change in value\n   * @param  {number} d - duration\n   * @return {number} - calculated value\n   */\n\n  function easeOutQuart(t, b, c, d) {\n    t /= d;\n    t--;\n    return -c * (t * t * t * t - 1) + b;\n  }\n  /**\n   * Merge two object\n   *\n   * @param  {object} obj1\n   * @param  {object} obj2\n   * @return {object} merged object\n   */\n\n\n  function mergeObject(obj1, obj2) {\n    var obj3 = {};\n    Object.keys(obj1).forEach(function (propertyName) {\n      obj3[propertyName] = obj1[propertyName];\n    });\n    Object.keys(obj2).forEach(function (propertyName) {\n      obj3[propertyName] = obj2[propertyName];\n    });\n    return obj3;\n  }\n\n  ;\n  /**\n   * Converts camel case to kebab case\n   * @param  {string} val the value to be converted\n   * @return {string} the converted value\n   */\n\n  function kebabCase(val) {\n    return val.replace(/([A-Z])/g, function ($1) {\n      return '-' + $1.toLowerCase();\n    });\n  }\n\n  ;\n  /**\n   * Count a number of item scrolled top\n   * @param  {Window|HTMLElement} container\n   * @return {number}\n   */\n\n  function countScrollTop(container) {\n    if (container instanceof HTMLElement) {\n      return container.scrollTop;\n    }\n\n    return container.pageYOffset;\n  }\n\n  ;\n  /**\n   * MoveTo Constructor\n   * @param {object} options Options\n   * @param {object} easeFunctions Custom ease functions\n   */\n\n  function MoveTo() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var easeFunctions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.options = mergeObject(defaults, options);\n    this.easeFunctions = mergeObject({\n      easeOutQuart: easeOutQuart\n    }, easeFunctions);\n  }\n  /**\n   * Register a dom element as trigger\n   * @param  {HTMLElement} dom Dom trigger element\n   * @param  {function} callback Callback function\n   * @return {function|void} unregister function\n   */\n\n\n  MoveTo.prototype.registerTrigger = function (dom, callback) {\n    var _this = this;\n\n    if (!dom) {\n      return;\n    }\n\n    var href = dom.getAttribute('href') || dom.getAttribute('data-target'); // The element to be scrolled\n\n    var target = href && href !== '#' ? document.getElementById(href.substring(1)) : document.body;\n    var options = mergeObject(this.options, _getOptionsFromTriggerDom(dom, this.options));\n\n    if (typeof callback === 'function') {\n      options.callback = callback;\n    }\n\n    var listener = function listener(e) {\n      e.preventDefault();\n\n      _this.move(target, options);\n    };\n\n    dom.addEventListener('click', listener, false);\n    return function () {\n      return dom.removeEventListener('click', listener, false);\n    };\n  };\n  /**\n   * Move\n   * Scrolls to given element by using easeOutQuart function\n   * @param  {HTMLElement|number} target Target element to be scrolled or target position\n   * @param  {object} options Custom options\n   */\n\n\n  MoveTo.prototype.move = function (target) {\n    var _this2 = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (target !== 0 && !target) {\n      return;\n    }\n\n    options = mergeObject(this.options, options);\n    var distance = typeof target === 'number' ? target : target.getBoundingClientRect().top;\n    var from = countScrollTop(options.container);\n    var startTime = null;\n    var lastYOffset;\n    distance -= options.tolerance; // rAF loop\n\n    var loop = function loop(currentTime) {\n      var currentYOffset = countScrollTop(_this2.options.container);\n\n      if (!startTime) {\n        // To starts time from 1, we subtracted 1 from current time\n        // If time starts from 1 The first loop will not do anything,\n        // because easing value will be zero\n        startTime = currentTime - 1;\n      }\n\n      var timeElapsed = currentTime - startTime;\n\n      if (lastYOffset) {\n        if (distance > 0 && lastYOffset > currentYOffset || distance < 0 && lastYOffset < currentYOffset) {\n          return options.callback(target);\n        }\n      }\n\n      lastYOffset = currentYOffset;\n\n      var val = _this2.easeFunctions[options.easing](timeElapsed, from, distance, options.duration);\n\n      options.container.scroll(0, val);\n\n      if (timeElapsed < options.duration) {\n        window.requestAnimationFrame(loop);\n      } else {\n        options.container.scroll(0, distance + from);\n        options.callback(target);\n      }\n    };\n\n    window.requestAnimationFrame(loop);\n  };\n  /**\n   * Adds custom ease function\n   * @param {string}   name Ease function name\n   * @param {function} fn   Ease function\n   */\n\n\n  MoveTo.prototype.addEaseFunction = function (name, fn) {\n    this.easeFunctions[name] = fn;\n  };\n  /**\n   * Returns options which created from trigger dom element\n   * @param  {HTMLElement} dom Trigger dom element\n   * @param  {object} options The instance's options\n   * @return {object} The options which created from trigger dom element\n   */\n\n\n  function _getOptionsFromTriggerDom(dom, options) {\n    var domOptions = {};\n    Object.keys(options).forEach(function (key) {\n      var value = dom.getAttribute(\"data-mt-\".concat(kebabCase(key)));\n\n      if (value) {\n        domOptions[key] = isNaN(value) ? value : parseInt(value, 10);\n      }\n    });\n    return domOptions;\n  }\n\n  return MoveTo;\n}();\n\nif (typeof module !== 'undefined') {\n  module.exports = MoveTo;\n} else {\n  window.MoveTo = MoveTo;\n}","/* eslint-disable max-len */\nimport MoveTo from 'moveto';\n\nconst backToTop = () => {\n  // Back to top button\n  const moveToTop = new MoveTo({\n    duration: 300,\n    easing: 'easeOutQuart',\n  });\n  const topButton = document.getElementById('top');\n  const focusableElements = document.querySelectorAll(\n    'button, a, input, select, textarea, [tabindex]:not([tabindex=\"-1\"])',\n  );\n\n  function trackScroll() {\n    const scrolled = window.pageYOffset;\n    const scrollAmount = document.documentElement.clientHeight;\n\n    if (scrolled > scrollAmount) {\n      topButton.classList.add('is-visible');\n    }\n\n    if (scrolled < scrollAmount) {\n      topButton.classList.remove('is-visible');\n    }\n  }\n\n  function scroll(focusVisible) {\n    // Check if user prefers reduced motion, if so, just scroll to top\n    const prefersReducedMotion = window.matchMedia(\n      '(prefers-reduced-motion: reduce)',\n    ).matches;\n\n    if (prefersReducedMotion) {\n      focusableElements[0].focus({ focusVisible });\n      return;\n    }\n\n    // Move smoothly to the first focusable element on the page\n    moveToTop.move(focusableElements[0]);\n\n    // Focus too, if on keyboard\n    focusableElements[0].focus({ preventScroll: true, focusVisible });\n  }\n\n  if (topButton) {\n    topButton.addEventListener('click', (event) => {\n      // Don't add hash in the end of the url\n      event.preventDefault();\n\n      // Focus without visibility (as user is not using keyboard)\n      scroll(false);\n    });\n\n    topButton.addEventListener('keydown', (event) => {\n      // Don't propagate keydown event to click event\n      event.preventDefault();\n\n      // Scroll with focus visible\n      scroll(true);\n    });\n  }\n\n  window.addEventListener('scroll', trackScroll);\n};\n\nexport default backToTop;\n","import MoveTo from 'moveto';\n\nconst initA11ySkipLink = () => {\n  // Go through all the headings of the page and select the first one\n  const a11ySkipLinkTarget = document.querySelectorAll('h1, h2, h3, h4, h5, h6')[0];\n  const a11ySkipLink = document.querySelectorAll('.skip-link')[0];\n\n  // Register trigger element\n  // eslint-disable-next-line no-unused-vars, no-restricted-globals\n  const moveTo = new MoveTo();\n\n  // When clicked, move focus to the target element\n\n  if (a11ySkipLink) {\n    a11ySkipLink.addEventListener('click', () => {\n      a11ySkipLinkTarget.setAttribute('tabindex', '-1');\n      a11ySkipLinkTarget.focus();\n      moveTo.move(a11ySkipLinkTarget);\n    });\n  }\n};\n\nexport default initA11ySkipLink;\n","const initA11yFocusSearchField = () => {\n  const urlSearch = window.location.search;\n  const urlParams = new URLSearchParams(urlSearch);\n  if (urlParams.has('s')) {\n    const searchField = document.querySelector('main input[name=\"s\"]');\n    if (searchField) {\n      searchField.focus({ preventScroll: true });\n    }\n  }\n};\n\nexport default initA11yFocusSearchField;\n","/**\n * Navigation.js module\n * The original, accessible navigation module for Air-light\n */\n\n// Import functions needed for the navigation module\nimport addMultipleEventListeners from './navigation/add-multiple-event-listeners';\nimport calculateBurgerMenuPosition from './navigation/calculate-burger-menu-position';\nimport a11yFocusTrap from './navigation/a11y-focus-trap';\nimport calculateDropdownToggleHeight from './navigation/calculate-dropdown-toggle-height';\nimport checkForSubmenuOverflow from './navigation/check-for-submenu-overflow';\nimport dropdownMenuOnHover from './navigation/dropdown-menu-on-hover';\nimport a11yAddDropdownToggleLabels from './navigation/a11y-add-dropdown-toggle-labels';\nimport a11yDropdownMenuKeyboardNavigation from './navigation/a11y-dropdown-menu-keyboard-navigation';\n\n// Navigation desktop click functions\nimport convertDropdownMenuItems from './navigation/convert-dropdown-menu-items';\nimport closeSubMenuHandler from './navigation/close-sub-menu-handler';\nimport a11yAddDropdownToggleLabelsClick from './navigation/a11y-add-dropdown-toggle-labels-click';\nimport a11yDropdownMenuKeyboardNavigationClick from './navigation/a11y-dropdown-menu-keyboard-navigation-click';\n\nconst navDesktop = () => {\n  const navPrimary = document.querySelector('.nav-primary');\n\n  // If .nav-primary doesn't exist, don't continue\n  if (!navPrimary) {\n    return;\n  }\n\n  // Define globals\n  const menuItems = navPrimary.querySelectorAll('.menu-item');\n\n  // Define focusable elements on sub-menu (.menu-item a, .dropdown button)\n  const focusableElementsforDropdown = document.querySelectorAll(\n    '.menu-item a, .dropdown button, .button-nav',\n  );\n\n  // If main-menu is not found, bail\n  if (!document.getElementById('main-menu')) {\n    return;\n  }\n\n  // Dropdown menus\n  a11yAddDropdownToggleLabels(menuItems);\n  a11yDropdownMenuKeyboardNavigation(menuItems, focusableElementsforDropdown);\n\n  // Dropdown on mouse hover\n  dropdownMenuOnHover(menuItems);\n\n  // Check for submenu overflow\n  checkForSubmenuOverflow(menuItems);\n};\n\nconst navClick = () => {\n  // If main-menu is not found, bail\n  if (!document.getElementById('main-menu')) {\n    return;\n  }\n  // Search for all menu items that have submenus\n  const dropdownMenuItems = document.querySelectorAll('.menu-item-has-children');\n\n  // Convert submenus to clickable elements\n  convertDropdownMenuItems(dropdownMenuItems);\n\n  // Define globals\n  const menuItems = document.querySelectorAll('.menu-item');\n  // Define focusable elements on sub-menu (.menu-item a, .dropdown button)\n  const focusableElementsforDropdown = document.querySelectorAll('.menu-item a, .dropdown button, .button-nav');\n\n  // Dropdown menus\n  a11yAddDropdownToggleLabelsClick(menuItems);\n  a11yDropdownMenuKeyboardNavigationClick(menuItems, focusableElementsforDropdown);\n\n  // Handle different scenarios when menus should be closed\n  closeSubMenuHandler(menuItems);\n};\n\nconst navMobile = () => {\n  // If burger toggle is not found, bail\n  if (!document.getElementById('nav-toggle')) {\n    // eslint-disable-next-line no-console\n    console.log('Warning: No nav-toggle found.');\n\n    return;\n  }\n\n  function navToggle(e) {\n    // If clicked with mouse or enter key\n    if (e.type === 'click' || e.keyCode === 13) {\n      // Activate nav\n      document.body.classList.toggle('js-nav-active');\n\n      // Scroll to top when triggering mobile navigation\n      // to ensure no gaps are between header and navigation\n      // Please note, if you use sticky-nav, comment out the next line\n      window.scrollTo(0, 0);\n\n      // Toggle aria-expanded attribute, if it's false, change to true and vice versa\n      if (document.getElementById('nav-toggle').getAttribute('aria-expanded') === 'false') {\n        document.getElementById('nav-toggle').setAttribute('aria-expanded', 'true');\n      } else {\n        document.getElementById('nav-toggle').setAttribute('aria-expanded', 'false');\n      }\n\n      // Toggle aria-label\n      // eslint-disable-next-line camelcase, no-undef\n      if (document.getElementById('nav-toggle').getAttribute('aria-label') === air_light_screenReaderText.expand_toggle) {\n        // eslint-disable-next-line camelcase, no-undef\n        document.getElementById('nav-toggle').setAttribute('aria-label', air_light_screenReaderText.collapse_toggle);\n      } else {\n        // eslint-disable-next-line camelcase, no-undef\n        document.getElementById('nav-toggle').setAttribute('aria-label', air_light_screenReaderText.expand_toggle);\n      }\n\n      // Center vertically the absolute positioned mobile dropdown toggles by setting fixed height\n      calculateDropdownToggleHeight();\n\n      // Focusable elements\n      const navContainer = document.getElementById('nav');\n      const focusableElements = [\n        ...navContainer.querySelectorAll(\n          'a, button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])',\n        ),\n      ]\n        .filter((el) => !el.hasAttribute('disabled'))\n        .filter((el) => !!(el.offsetWidth || el.offsetHeight || el.getClientRects().length));\n\n      focusableElements.forEach((menuItem) => {\n        menuItem.addEventListener('keydown', a11yFocusTrap);\n      });\n    }\n  }\n\n  // When clicking #nav-toggle, add .js-nav-active body class\n  addMultipleEventListeners(\n    document.getElementById('nav-toggle'),\n    ['click', 'keydown', 'keypress'],\n    navToggle,\n  );\n\n  // Get all dropdown-toggles\n  const dropdownToggles = document.querySelectorAll('.dropdown-toggle');\n\n  // Loop through dropdown-toggles\n  dropdownToggles.forEach((dropdownToggle) => {\n    // When clicking a dropdown-toggle, add .js-dropdown-active class to the parent .menu-item\n    addMultipleEventListeners(\n      dropdownToggle,\n      ['click', 'keydown', 'keypress'],\n      calculateDropdownToggleHeight,\n    );\n  });\n\n  // Calculate mobile nav-toggle position\n  calculateBurgerMenuPosition();\n};\n\n// Sticky navigation\n// eslint-disable-next-line no-unused-vars\nconst navSticky = () => {\n  function initStickyNavStyles() {\n    // Add default styles for sticky navigation as <style>\n    const style = document.createElement('style');\n    style.innerHTML = `\n    .site-header {\n      transition: all 100ms cubic-bezier(.4, 0, .2, 1);\n      overflow: visible;\n      width: 100%;\n      z-index: 100;\n    }\n\n    .site-header.is-fixed {\n      animation-duration: 300ms;\n      animation-iteration-count: 1;\n      animation-name: roll-in;\n      background-color: var(--color-white);\n      border-bottom: 1px solid var(--color-black);\n      left: 0;\n      position: fixed;\n      top: 0;\n    }\n\n    @keyframes roll-in {\n      0% {\n        opacity: 0;\n        top: -100%;\n      }\n\n      100% {\n        opacity: 1;\n        top: 0;\n      }\n    }`;\n    document.head.appendChild(style);\n  }\n\n  function initStickyNav() {\n    // Get --width-max-mobile from CSS\n    const widthMaxMobile = getComputedStyle(\n      document.documentElement,\n    ).getPropertyValue('--width-max-mobile');\n\n    // Let's see if we are on mobile viewport\n    const isMobile = window.matchMedia(\n      `(max-width: ${widthMaxMobile})`,\n    ).matches;\n\n    // If things are not okay, bail\n    if (isMobile) {\n      return;\n    }\n\n    const siteHeader = document.querySelector('.site-header');\n    const headerHeight = getComputedStyle(siteHeader).height.split('px')[0];\n    const scrollValue = window.scrollY;\n\n    if (scrollValue > headerHeight) {\n      siteHeader.classList.add('is-fixed');\n    } else if (scrollValue < headerHeight) {\n      siteHeader.classList.remove('is-fixed');\n    }\n\n    if (window.pageYOffset > headerHeight) {\n      siteHeader.classList.add('is-fixed');\n    }\n  }\n\n  window.addEventListener('scroll', initStickyNav);\n  window.addEventListener('DOMContentLoaded', initStickyNavStyles);\n};\n\n// Export different navigation functions\nexport {\n  navSticky, navDesktop, navClick, navMobile,\n};\n\n// Reinit some things\nwindow.addEventListener('resize', () => {\n  // Center vertically the absolute positioned burger\n  calculateBurgerMenuPosition();\n\n  // Center vertically the absolute positioned mobile dropdown toggles by setting fixed height\n  calculateDropdownToggleHeight();\n\n  // Check for submenu overflow\n  checkForSubmenuOverflow(document.querySelectorAll('.menu-item'));\n});\n","// Event listener helper function\nfunction addMultipleEventListeners(element, events, handler) {\n  events.forEach((e) => element.addEventListener(e, handler));\n}\n\nexport default addMultipleEventListeners;\n","// Calculate burger menu position\nfunction calculateBurgerMenuPosition() {\n  // If nav-toggle, site-header or main-menu not found, bail\n  if (!document.getElementById('nav-toggle') || !document.querySelector('.site-header') || !document.getElementById('menu-items-wrapper')) {\n    // eslint-disable-next-line no-console\n    console.log('Warning: No nav-toggle or site-header found.');\n\n    return;\n  }\n\n  // Set viewport\n  const viewportWidth = document.documentElement.clientWidth || document.body.clientWidth;\n\n  // Get --width-max-mobile from CSS\n  const widthMaxMobile = parseInt(getComputedStyle(document.documentElement).getPropertyValue('--width-max-mobile'), 10);\n\n  // Get the height of .site-header and #nav-toggle\n  // Calculate the top position of the toggle to be exactly in the center vertically\n  const siteHeaderHeight = document.querySelector('.site-header').offsetHeight;\n\n  // Set navigation position from top if on mobile\n  if (viewportWidth <= widthMaxMobile) {\n    document.getElementById('menu-items-wrapper').style.top = `${siteHeaderHeight}px`;\n    document.getElementById('menu-items-wrapper').style.height = `calc(100vh - ${siteHeaderHeight}px)`;\n\n    // If there is air-notification element(s), calculate top and height of menu-items-wrapper\n    if (document.querySelector('.air-notification')) {\n      // Get air-notification element(s)\n      const airNotifications = document.querySelectorAll('.air-notification');\n\n      // Get the height of air-notification(s)\n      let airNotificationsHeight = 0;\n      airNotifications.forEach((airNotification) => {\n        airNotificationsHeight = airNotification.offsetHeight + airNotificationsHeight;\n      });\n\n      // Set the height and top of menu-items-wrapper\n      document.getElementById('menu-items-wrapper').style.height = `calc(100vh - ${siteHeaderHeight + airNotificationsHeight}px)`;\n      document.getElementById('menu-items-wrapper').style.top = `${siteHeaderHeight + airNotificationsHeight}px`;\n\n      // When air-notification is closed, recalculate the height of menu-items-wrapper\n      airNotifications.forEach((airNotification) => {\n        const button = airNotification.querySelector('button');\n        const currentNotificationHeight = airNotification.offsetHeight;\n        if (button) {\n          button.addEventListener('click', () => {\n            airNotificationsHeight -= currentNotificationHeight;\n            document.getElementById('menu-items-wrapper').style.height = `calc(100vh - ${siteHeaderHeight + airNotificationsHeight}px)`;\n            document.getElementById('menu-items-wrapper').style.top = `${siteHeaderHeight + airNotificationsHeight}px`;\n          });\n        }\n      });\n    }\n  } else {\n    document.getElementById('menu-items-wrapper').style.top = '0';\n    document.getElementById('menu-items-wrapper').style.height = 'auto';\n  }\n}\n\nexport default calculateBurgerMenuPosition;\n","function a11yFocusTrap(e) {\n  // Init focusable elements\n  let focusableElements = [];\n\n  // Define container\n  const container = document.getElementById('nav');\n\n  // Define nav-toggle\n  const navToggle = document.getElementById('nav-toggle');\n\n  // Get --width-max-mobile from CSS\n  const widthMaxMobile = getComputedStyle(\n    document.documentElement,\n  ).getPropertyValue('--width-max-mobile');\n\n  // Let's see if we are on mobile viewport\n  const isMobile = window.matchMedia(`(max-width: ${widthMaxMobile})`).matches;\n\n  // If things are not okay, bail\n  if (!container || !navToggle || !isMobile) {\n    return;\n  }\n\n  // Set focusable elements inside main navigation.\n  focusableElements = [\n    ...container.querySelectorAll(\n      'a, button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])',\n    ),\n  ]\n    .filter((el) => !el.hasAttribute('disabled'))\n    .filter(\n      (el) => !!(el.offsetWidth || el.offsetHeight || el.getClientRects().length),\n    );\n\n  // Get first and last focusable element\n  const firstFocusableElement = focusableElements[0];\n  const lastFocusableElement = focusableElements[focusableElements.length - 1];\n\n  // On key down on first element, if it's a Shift+Tab, redirect to last element\n  if (firstFocusableElement === e.target && e.code === 'Tab' && e.shiftKey) {\n    e.preventDefault();\n    lastFocusableElement.focus();\n  }\n  // On key down on last element, if it's a Tab, redirect to first element\n  if (lastFocusableElement === e.target && e.code === 'Tab' && !e.shiftKey) {\n    e.preventDefault();\n    firstFocusableElement.focus();\n  }\n}\n\nexport default a11yFocusTrap;\n","// Calculate mobile nav-toggle height\nfunction calculateDropdownToggleHeight() {\n  // If .dropdown-toggle not found, bail\n  if (!document.querySelectorAll('.dropdown-toggle')) {\n    // eslint-disable-next-line no-console\n    console.log('Warning: No dropdown-toggles found.');\n\n    return;\n  }\n\n  // Find all .dropdown-toggle elements on mobile\n  const dropdownToggles = document.querySelectorAll('.dropdown-toggle');\n\n  // Loop through dropdown toggles\n  dropdownToggles.forEach((dropdownToggle) => {\n    // Get the height of previous element\n\n    const previousElement = dropdownToggle.previousElementSibling;\n    if (previousElement) {\n      const previousElementHeight = previousElement.offsetHeight;\n      // Set the height of the dropdown toggle\n      // eslint-disable-next-line no-param-reassign\n      dropdownToggle.style.height = `${previousElementHeight}px`;\n    }\n  });\n}\n\nexport default calculateDropdownToggleHeight;\n","// Import required modules\nimport isOutOfViewport from './is-out-of-viewport';\n\n// Check for submenu overflow\nfunction checkForSubmenuOverflow(items) {\n  // If items not found, bail\n  if (!items) {\n    // eslint-disable-next-line no-console\n    console.log('Warning: No items for sub-menus found.');\n\n    return;\n  }\n\n  items.forEach((li) => {\n    // Find sub menus\n    const subMenusUnderMenuItem = li.querySelectorAll('.sub-menu');\n\n    // Loop through sub menus\n    subMenusUnderMenuItem.forEach((subMenu) => {\n      // First let's check if submenu exists\n      if (typeof subMenusUnderMenuItem !== 'undefined') {\n        // Check if the sub menu is out of viewport or not\n        const isOut = isOutOfViewport(subMenu);\n\n        // At least one side of the element is out of viewport\n        if (isOut.right) {\n          subMenu.classList.add('is-out-of-viewport');\n        }\n      }\n    });\n  });\n}\n\nexport default checkForSubmenuOverflow;\n","// Check if an element is out of the viewport\n// eslint-disable-next-line func-names\nconst isOutOfViewport = function (elem) {\n  // Get element's bounding\n  const bounding = elem.getBoundingClientRect();\n\n  // Check if it's out of the viewport on each side\n  const out = {};\n  out.top = bounding.top < 0;\n  out.left = bounding.left < 0;\n  out.bottom = bounding.bottom\n    >= (document.documentElement.clientHeight || document.body.clientHeight);\n  out.right = bounding.right\n    >= (document.documentElement.clientWidth || document.body.clientWidth);\n  out.any = out.top || out.left || out.bottom || out.right;\n\n  return out;\n};\n\nexport default isOutOfViewport;\n","// Dropdown menu function\nfunction dropdownMenuOnHover(items) {\n  // Optional timeout\n  const hoverIntentTimeout = 0;\n\n  items.forEach((li) => {\n    // eslint-disable-next-line func-names\n    li.addEventListener('mouseover', function () {\n      // Get --width-max-mobile from CSS\n      const widthMaxMobile = getComputedStyle(document.documentElement).getPropertyValue('--width-max-mobile');\n\n      // Let's see if we are on mobile viewport\n      const isMobile = window.matchMedia(`(max-width: ${widthMaxMobile})`).matches;\n\n      // If rules don't apply, bail\n      if (li.classList.contains('removing-hover') || isMobile) {\n        return;\n      }\n\n      // Add hover classes\n      this.classList.add('hover-intent');\n      this.classList.add('hovering');\n      this.parentNode.classList.add('hover-intent');\n      this.parentNode.classList.add('hovering');\n\n      // Remove hovering class after a while\n      setTimeout(() => {\n        this.classList.remove('hovering');\n        this.parentNode.classList.remove('hovering');\n      }, 500);\n\n      document.addEventListener('keydown', (keydownMouseoverEvent) => {\n        // If rules don't apply, bail\n        if (this.classList.contains('removing-hover') || !this.classList.contains('hovering') || !this.parentNode.classList.contains('hovering')) {\n          return;\n        }\n\n        // Close navigation on Escape while hovering the navigation\n        if (keydownMouseoverEvent.key === 'Escape') {\n          li.classList.remove('hover-intent');\n          li.parentNode.classList.remove('hover-intent');\n          li.parentNode.parentNode.classList.remove('hover-intent');\n\n          // Add class removing-hover to prevent the menu from opening again when moving the mouse\n          li.classList.add('removing-hover');\n          li.parentNode.classList.add('removing-hover');\n\n          // Remove removing-hover class after a while to re-initialize the menu\n          setTimeout(() => {\n            this.classList.remove('removing-hover');\n            this.parentNode.classList.remove('removing-hover');\n          }, 500);\n        }\n      });\n\n      // Remove removing-hover class after a while to re-initialize the menu\n      setTimeout(() => {\n        this.classList.remove('removing-hover');\n        this.parentNode.classList.remove('removing-hover');\n      }, 500);\n    });\n\n    // eslint-disable-next-line func-names\n    li.addEventListener('mouseleave', function () {\n      setTimeout(() => {\n        // Remove hover-intent class on mouse leave\n        this.classList.remove('hover-intent');\n        this.parentNode.classList.remove('hover-intent');\n\n        const dropdownToggles = this.querySelectorAll('.dropdown-toggle');\n        dropdownToggles.forEach((dropdownToggle) => {\n          // Set aria-expanded to false for all dropdown-toggle elements\n          dropdownToggle.setAttribute('aria-expanded', 'false');\n\n          if (dropdownToggle.parentNode.querySelector('.dropdown')) {\n            const linkText = dropdownToggle.parentNode.querySelector('.dropdown').textContent;\n\n            // Set aria-label to expand for all dropdown-toggle elements\n            // eslint-disable-next-line camelcase, no-undef\n            dropdownToggle.setAttribute('aria-label', `${air_light_screenReaderText.expand_for} ${linkText}`);\n          }\n        });\n      }, hoverIntentTimeout);\n\n      setTimeout(() => {\n        // Remove removing-hover class after a while to re-initialize the menu\n        this.classList.remove('removing-hover');\n        this.parentNode.classList.remove('removing-hover');\n      }, 500);\n    });\n  });\n}\n\nexport default dropdownMenuOnHover;\n","// Add proper link labels for screen readers\nfunction a11yAddDropdownToggleLabels(items) {\n  items.forEach((li) => {\n    // If .dropdown-class does not exist then do nothing\n    if (!li.querySelector('.dropdown')) {\n      return;\n    }\n\n    // Get the dropdown-button\n    const dropdownButton = li.querySelector('.dropdown-toggle');\n\n    // Get the link text that is children of this item\n    const linkText = li.querySelector('.dropdown').innerText;\n\n    // Add the aria-label to the dropdown button\n    // eslint-disable-next-line camelcase, no-undef\n    dropdownButton.setAttribute('aria-label', `${air_light_screenReaderText.expand_for} ${linkText}`);\n  });\n}\n\nexport default a11yAddDropdownToggleLabels;\n","// Import required modules\nimport addMultipleEventListeners from './add-multiple-event-listeners';\n\n// Accessible keyboard navigation for dropdown menus\nfunction a11yDropdownMenuKeyboardNavigation(items, focusableElements) {\n  focusableElements.forEach((item) => {\n    item.addEventListener('keyup', (e) => {\n      // Get this item\n      const thisElement = e.target;\n\n      // Close previous dropdown if this parent contains id main-menu\n      if (\n        thisElement.parentNode.parentNode.id === 'main-menu'\n        || (thisElement.classList.contains('button-nav')\n        && thisElement.parentNode.parentNode.id === 'main-menu')\n      ) {\n        // If we have previous item\n        if (thisElement.parentNode.previousElementSibling) {\n          // Get the previous item\n          const previousItem = thisElement.parentNode.previousElementSibling;\n\n          // Remove toggled-on class from previous item\n          previousItem.classList.remove('toggled-on');\n\n          // Remove hover-intent class from previous item\n          previousItem.classList.remove('hover-intent');\n\n          // If sub-menu found\n          if (previousItem.querySelector('.sub-menu')) {\n            // Get the previous item's dropdown\n            const previousItemDropdown = previousItem.querySelector('.sub-menu');\n\n            // Remove toggled-on class from previous sibling\n            previousItemDropdown.classList.remove('toggled-on');\n\n            // Remove hover-intent class from previous sibling\n            previousItemDropdown.classList.remove('hover-intent');\n\n            // Change toggle button aria-label\n            // eslint-disable-next-line camelcase, no-undef\n            previousItem.querySelector('.dropdown-toggle').setAttribute('aria-label', `${air_light_screenReaderText.expand_for} ${previousItem.querySelector('.dropdown-item').innerText}`);\n\n            // Change toggle button aria-expanded\n            previousItem\n              .querySelector('.dropdown-toggle')\n              .setAttribute('aria-expanded', 'false');\n\n            // Toggle toggled-on class on previousItem\n            previousItem\n              .querySelector('.dropdown-toggle')\n              .classList.remove('toggled-on');\n          }\n        }\n      }\n    });\n\n    // NVDA supported keyboard navigation (NVDA and mobile need click event to work)\n    addMultipleEventListeners(item, ['click', 'keydown', 'keypress'], (e) => {\n      // Get this link\n      const thisElement = e.target;\n\n      // Get this menu-item\n      const thisMenuItem = thisElement.parentNode;\n\n      // Define the elements of this dropdown\n      const firstDropdown = thisElement.parentNode.parentNode.parentNode.querySelector('.sub-menu');\n      const thisDropdown = thisElement.nextElementSibling;\n      const dropdownToggleButton = thisElement.parentNode.parentNode.parentNode.querySelector(\n        '.dropdown-toggle',\n      );\n\n      // Remove removing-hover class\n      thisElement.classList.remove('removing-hover');\n      thisMenuItem.parentNode.classList.remove('removing-hover');\n\n      // Open navigation on Enter, e.type click is for NVDA\n      if (e.key === 'Enter' || e.type === 'click') {\n        // If this item is a hyperlink, do nothing. We want to use Enter only with buttons\n        if (thisElement.tagName === 'A') {\n          return;\n        }\n\n        // If link label not found, do nothing\n        if (!thisElement.parentNode.querySelector('.dropdown-item')) {\n          return;\n        }\n\n        // Get the link label of .dropdown link\n        const linkLabel = thisElement.parentNode.querySelector('.dropdown-item').innerText;\n\n        // Toggle toggled-on class\n        thisElement.classList.toggle('toggled-on');\n\n        // If aria-expanded is false, set it to true\n        if (thisElement.getAttribute('aria-expanded') === 'false') {\n          // Set aria-expanded to true\n          thisElement.setAttribute('aria-expanded', 'true');\n\n          // Set aria-label of the dropdown button\n          // eslint-disable-next-line camelcase, no-undef\n          thisElement.setAttribute('aria-label', `${air_light_screenReaderText.collapse_for} ${linkLabel}`);\n        } else {\n          // Set aria-expanded to false\n          thisElement.setAttribute('aria-expanded', 'false');\n\n          // Set aria-label of the dropdown button\n          // eslint-disable-next-line camelcase, no-undef\n          thisElement.setAttribute('aria-label', `${air_light_screenReaderText.expand_for} ${linkLabel}`);\n        }\n\n        // Toggle the dropdown\n        if (thisDropdown && !thisDropdown.classList.contains('toggled-on')) {\n          // Add hover-intent class to this menu-item\n          thisMenuItem.classList.add('hover-intent');\n\n          // Add toggled-on class to this dropdown\n          thisDropdown.classList.add('toggled-on');\n        } else {\n          // Remove hover-intent class from this menu-item\n          if (thisMenuItem) {\n            thisMenuItem.classList.remove('hover-intent');\n          }\n\n          // Remove toggled-on class from this dropdown\n          if (thisDropdown) {\n            thisDropdown.classList.remove('toggled-on');\n          }\n        }\n      }\n\n      // Close navigation on Escape\n      if (e.key === 'Escape') {\n        // Close mobile nav if no sub-menu is open\n        if (\n          thisElement.parentNode.parentNode.id === 'main-menu'\n          && !thisElement.parentNode.classList.contains('toggled-on')\n        ) {\n          document.body.classList.remove('js-nav-active');\n\n          // Move focus back to nav-toggle\n          document.getElementById('nav-toggle').focus();\n        }\n\n        // If we're on main level and nav item is not open, do nothing\n        if (\n          thisElement.parentNode.parentNode.id === 'main-menu'\n          && !thisElement.parentNode.classList.contains('hover-intent')\n        ) {\n          return;\n        }\n\n        // Remove toggled-on classes from this dropdown\n        firstDropdown.classList.remove('toggled-on');\n\n        // Remove hover-intent classes from the current menu-item\n        thisMenuItem.classList.remove('hover-intent');\n\n        // Hide menu if we're on second level\n        thisMenuItem.parentNode.parentNode.classList.remove('hover-intent');\n\n        // Set aria expanded attribute to false\n        dropdownToggleButton.setAttribute('aria-expanded', 'false');\n\n        // Remove toggled-on\n        dropdownToggleButton.classList.remove('toggled-on');\n\n        // Get the link label of dropdown link\n        const linkLabel = thisElement.parentNode.querySelector('.dropdown-item').innerText;\n\n        // Set aria label attribute\n        // eslint-disable-next-line camelcase, no-undef\n        dropdownToggleButton.setAttribute('aria-label', `${air_light_screenReaderText.expand_for} ${linkLabel}`);\n\n        // If we're on button, add aria-expanded to false\n        if (thisElement.classList.contains('dropdown-toggle')) {\n          thisElement.setAttribute('aria-expanded', 'false');\n\n          // Set aria-label of the dropdown button\n          // eslint-disable-next-line camelcase, no-undef\n          thisElement.setAttribute('aria-label', `${air_light_screenReaderText.expand_for} ${linkLabel}`);\n        }\n\n        // Move focus back to previous .dropdown-toggle, but only if we're not on main level\n        if (thisElement.parentNode.parentNode.id !== 'main-menu') {\n          // Delay toggling for NVDA for 100 ms\n          setTimeout(() => {\n            dropdownToggleButton.focus();\n          }, 100);\n        }\n      }\n\n      // If no arrow keys used, do not continue\n      if (\n        e.key !== 'ArrowUp'\n        && e.key !== 'ArrowDown'\n        && e.key !== 'ArrowLeft'\n        && e.key !== 'ArrowRight'\n      ) {\n        return;\n      }\n\n      // Arrow keys\n      switch (e.code) {\n      // ArrowUp\n      case 'ArrowUp':\n        // Stop propagation\n        e.stopPropagation();\n\n        // Stop scrolling\n        e.preventDefault();\n\n        // If we're on the sub-menu, move up\n        if (\n          thisElement.parentNode.parentNode.previousElementSibling\n            && thisElement.parentNode.parentNode.previousElementSibling.classList.contains(\n              'dropdown-toggle',\n            )\n        ) {\n          // Focus to the previous link\n          thisElement.parentNode.parentNode.previousElementSibling.focus();\n        }\n\n        // If this is a .dropdown-toggle button and aria-expanded is true, close the dropdown\n        if (\n          thisElement.classList.contains('dropdown-toggle')\n            && thisElement.getAttribute('aria-expanded') === 'true'\n        ) {\n          // Remove hover-intent class from this menu-item\n          thisMenuItem.classList.remove('hover-intent');\n\n          // Remove toggled-on class from this dropdown\n          thisDropdown.classList.remove('toggled-on');\n\n          // Set aria-expanded attribute to false\n          thisElement.setAttribute('aria-expanded', 'false');\n\n          // Get the link label of .dropdown link\n          const linkLabel = thisElement.parentNode.querySelector('.dropdown-item').innerText;\n\n          // Set aria-label of the dropdown button\n          // eslint-disable-next-line camelcase, no-undef\n          thisElement.setAttribute('aria-label', `${air_light_screenReaderText.expand_for} ${linkLabel}`);\n\n          // Move focus back to previous .dropdown-toggle\n          dropdownToggleButton.focus();\n        }\n\n        // If this is a correct element, focus to the previous link\n        if (thisElement.tagName === 'A' || thisElement.tagName === 'BUTTON') {\n          // If there is no previous items, bail\n          if (!thisElement.parentNode.previousElementSibling) {\n            return;\n          }\n\n          // Get the previous link\n          const previousLink = thisElement.parentNode.previousElementSibling.querySelector('a');\n\n          // Get .dropdown-toggle element\n          const previousToggle = thisElement.parentNode.previousElementSibling.querySelector(\n            '.dropdown-toggle',\n          );\n\n          // If previous element is .dropdown-toggle element, focus to it\n          if (\n            previousToggle\n              && !thisElement.querySelector('.dropdown-toggle')\n          ) {\n            previousToggle.focus();\n          } else {\n            // If previous element is a link, focus to it\n            previousLink.focus();\n          }\n        }\n\n        break;\n\n        // ArrowDown\n      case 'ArrowDown':\n        // Stop propagation\n        e.stopPropagation();\n\n        // Stop scrolling\n        e.preventDefault();\n\n        // If we're on the sub-menu, move down\n        if (\n          thisElement.parentNode.parentNode.nextElementSibling\n            && thisElement.parentNode.parentNode.nextElementSibling.classList.contains(\n              'dropdown-toggle',\n            )\n        ) {\n          // Focus to the next link\n          thisElement.parentNode.parentNode.nextElementSibling.focus();\n        }\n\n        // If this is a .dropdown-toggle button and aria-expanded is true, move down\n        if (\n          thisElement.classList.contains('dropdown-toggle')\n            && thisElement.getAttribute('aria-expanded') === 'true'\n        ) {\n          // Focus to the next link\n          thisElement.parentNode\n            .querySelector('.sub-menu')\n            .querySelector('li:first-child')\n            .querySelector('a')\n            .focus();\n        }\n\n        // If this is a .dropdown-toggle button and aria-expanded is false, open sub-menu\n        // (if we are not inside sub-menu)\n        if (\n          thisElement.classList.contains('dropdown-toggle')\n            && thisElement.getAttribute('aria-expanded') === 'false'\n            && !thisElement.parentNode.parentNode.classList.contains('sub-menu')\n        ) {\n          // Open sub-menu\n          thisElement.click();\n\n          // Focus to the next link under sub-menu\n          thisElement.parentNode\n            .querySelector('.sub-menu')\n            .querySelector('li:first-child')\n            .querySelector('a')\n            .focus();\n\n          // Don't do anything else\n          return;\n        }\n\n        // If we are in fact in sub menu, move to next link\n        if (\n          thisElement.parentNode.parentNode.classList.contains('sub-menu')\n        ) {\n          // Focus to the next link\n          thisElement.parentNode.nextElementSibling\n            .querySelector('a')\n            .focus();\n        }\n\n        // If this is a correct element, focus to the next link\n        if (\n          (thisElement.tagName === 'A' || thisElement.tagName === 'BUTTON')\n            && !thisElement.classList.contains('dropdown-toggle')\n        ) {\n          // If there is no next items, bail\n          if (!thisElement.parentNode.nextElementSibling) {\n            return;\n          }\n\n          // Get the next link\n          const nextLink = thisElement.parentNode.nextElementSibling.querySelector('a');\n\n          // Get .dropdown-toggle element\n          let nextToggle = thisElement.parentNode.nextElementSibling.querySelector(\n            '.dropdown-toggle',\n          );\n\n          // If this has class .dropdown-item, jump to the next .dropdown-toggle\n          if (thisElement.classList.contains('dropdown-item')) {\n            // If there is a toggle\n            if (thisElement.nextElementSibling) {\n              // Get the dropdown-toggle element\n              nextToggle = thisElement.nextElementSibling;\n\n              // If next element is .dropdown-toggle element, focus to it\n              if (nextToggle) {\n                nextToggle.focus();\n              }\n            }\n          }\n\n          // If next element is .dropdown-toggle element, focus to it\n          if (nextToggle && !thisElement.querySelector('.dropdown-toggle')) {\n            nextToggle.focus();\n          } else {\n            // If next element is a link, focus to it\n            nextLink.focus();\n          }\n        }\n\n        break;\n\n        // ArrowLeft\n      case 'ArrowLeft':\n        // Stop propagation\n        e.stopPropagation();\n\n        // Stop scrolling\n        e.preventDefault();\n\n        // If we are on the first link, move to the dropdown-toggle and close menu\n        if (\n          thisElement.parentNode.previousElementSibling === null\n            && thisElement.parentNode.parentNode.id !== 'main-menu'\n        ) {\n          // Focus to the previous link\n          thisElement.parentNode.parentNode.parentNode\n            .querySelector('.dropdown-toggle')\n            .focus();\n\n          // Close the dropdown\n          thisElement.parentNode.parentNode.parentNode\n            .querySelector('.dropdown-toggle')\n            .click();\n\n          // Don't do anything else\n          return;\n        }\n\n        // If this is a .dropdown-toggle button and aria-expanded is true, move left\n        if (\n          thisElement.parentNode.previousElementSibling\n            && thisElement.classList.contains('dropdown-toggle')\n            && thisElement.getAttribute('aria-expanded') === 'true'\n            && thisElement.parentNode.parentNode.id !== 'main-menu'\n        ) {\n          // Focus to the previous link\n          thisElement.parentNode.previousElementSibling\n            .querySelector('a')\n            .focus();\n        }\n\n        // If this is a .dropdown-toggle button and aria-expanded is false, close the dropdown\n        if (\n          thisElement.classList.contains('dropdown-toggle')\n            && thisElement.getAttribute('aria-expanded') === 'false'\n            && thisElement.parentNode.parentNode.id !== 'main-menu'\n        ) {\n          // Remove hover-intent class from this menu-item\n          thisMenuItem.classList.remove('hover-intent');\n\n          // Remove toggled-on class from this dropdown\n          thisDropdown.classList.remove('toggled-on');\n\n          // Set aria-expanded attribute to false\n          thisElement.setAttribute('aria-expanded', 'false');\n\n          // Get the link label of .dropdown link\n          const linkLabel = thisElement.parentNode.querySelector('.dropdown-item').innerText;\n\n          // Set aria-label of the dropdown button\n          // eslint-disable-next-line camelcase, no-undef\n          thisElement.setAttribute('aria-label', `${air_light_screenReaderText.expand_for} ${linkLabel}`);\n\n          // Move focus back to previous .dropdown-toggle\n          dropdownToggleButton.focus();\n        }\n\n        // If this is a correct element, focus to the previous link\n        if (thisElement.tagName === 'A' || thisElement.tagName === 'BUTTON') {\n          // If this is a .dropdown-toggle button and aria-expanded is false,\n          // move to the link directly before it\n          if (\n            thisElement.previousElementSibling\n              && thisElement.classList.contains('dropdown-toggle')\n              && thisElement.getAttribute('aria-expanded') === 'false'\n          ) {\n            // Focus to the previous link\n            thisElement.previousElementSibling.focus();\n\n            // Don't do anything else\n            return;\n          }\n\n          // If there is no previous items, bail\n          if (!thisElement.parentNode.previousElementSibling) {\n            return;\n          }\n\n          // Get the previous link\n          const previousLink = thisElement.parentNode.previousElementSibling.querySelector('a');\n\n          // Get .dropdown-toggle element\n          const previousToggle = thisElement.parentNode.previousElementSibling.querySelector(\n            '.dropdown-toggle',\n          );\n\n          // If previous element is .dropdown-toggle element, focus to it\n          if (previousToggle) {\n            previousToggle.focus();\n          } else {\n            // If previous element is a link, focus to it\n            previousLink.focus();\n          }\n        }\n\n        break;\n\n        // ArrowRight\n      case 'ArrowRight':\n        // Stop propagation\n        e.stopPropagation();\n\n        // Stop scrolling\n        e.preventDefault();\n\n        // If this is a .dropdown-toggle button and aria-expanded is true, move right\n        if (\n          thisElement.classList.contains('dropdown-toggle')\n            && thisElement.getAttribute('aria-expanded') === 'true'\n            && thisElement.parentNode.parentNode.id !== 'main-menu'\n        ) {\n          // Focus to the next link\n          thisElement.parentNode\n            .querySelector('.sub-menu')\n            .querySelector('li:first-child')\n            .querySelector('a')\n            .focus();\n        }\n\n        // If this has class .dropdown-item, jump to the next .dropdown-toggle\n        if (thisElement.nextElementSibling) {\n          thisElement.nextElementSibling.focus();\n\n          // Disable other actions if this is a .dropdown-item\n          if (thisElement.classList.contains('dropdown-item')) {\n            return;\n          }\n        }\n\n        // If this is a .dropdown-toggle button and aria-expanded is false, open sub-menu\n        if (\n          thisElement.classList.contains('dropdown-toggle')\n            && thisElement.getAttribute('aria-expanded') === 'false'\n            && thisElement.parentNode.parentNode.id !== 'main-menu'\n        ) {\n          // Open sub-menu\n          thisElement.click();\n\n          // Do nothing else\n          return;\n        }\n\n        // If this is a dropdown-toggle button and aria-expanded is true, move right\n        if (\n          thisElement.classList.contains('dropdown-toggle')\n            && thisElement.getAttribute('aria-expanded') === 'true'\n            && thisElement.parentNode.parentNode.id !== 'main-menu'\n        ) {\n          // Focus to the next link\n          thisElement.parentNode\n            .querySelector('.sub-menu')\n            .querySelector('li:first-child')\n            .querySelector('a')\n            .focus();\n\n          // Don't do anything else\n          return;\n        }\n\n        // If this is a correct element, focus to the previous link\n        if (thisElement.tagName === 'A' || thisElement.tagName === 'BUTTON') {\n          // If there is no next items, bail\n          if (!thisElement.parentNode.nextElementSibling) {\n            return;\n          }\n\n          // Get the next link\n          const nextLink = thisElement.parentNode.nextElementSibling.querySelector('a');\n\n          // Get .dropdown-toggle element\n          const nextToggle = thisElement.parentNode.nextElementSibling.querySelector(\n            '.dropdown-toggle',\n          );\n\n          // If next element is .dropdown-toggle element, focus to it\n          if (nextToggle) {\n            nextToggle.focus();\n          } else {\n            // If next element is a link, focus to it\n            nextLink.focus();\n          }\n        }\n\n        break;\n\n      default:\n        break;\n      }\n    });\n  });\n}\n\nexport default a11yDropdownMenuKeyboardNavigation;\n","function convertDropdownMenuItems(items) {\n  items.forEach((li) => {\n  // Get dropdown toggle button\n    const dropdownToggle = li.querySelector('.dropdown-toggle');\n\n    // Get dropdown menu item data\n    const menuItemTitle = li.querySelector('a > span').innerHTML;\n    const menuItemLinkElement = li.querySelector('a');\n    const menuItemLink = menuItemLinkElement.href;\n\n    // Remove dropdown menu item link\n    menuItemLinkElement.remove();\n\n    // Add dropdown menu item title to dropdown toggle button\n    dropdownToggle.innerHTML = menuItemTitle;\n\n    // Create new nav element\n    const navElement = document.createElement('li');\n    navElement.classList.add('menu-item');\n\n    // Add dropdown menu item data to nav element\n    // Create elements\n    const navElementLink = document.createElement('a');\n    const navElementLinkSpan = document.createElement('span');\n\n    // Add data to elements\n    // Span\n    navElementLinkSpan.innerHTML = menuItemTitle;\n    navElementLinkSpan.setAttribute('itemprop', 'name');\n    // Link\n    navElementLink.setAttribute('itemprop', 'url');\n    navElementLink.href = menuItemLink;\n    navElementLink.classList.add('dropdown-item');\n\n    // Append elements\n    navElementLink.appendChild(navElementLinkSpan);\n    navElement.appendChild(navElementLink);\n\n    // Get the sub menu first child and add the new nav element before it\n    const subMenuFirstChild = li.querySelector('.sub-menu > li');\n    const subMenu = li.querySelector('.sub-menu');\n    subMenu.insertBefore(navElement, subMenuFirstChild);\n  });\n}\n\nexport default convertDropdownMenuItems;\n","import closeSubMenu from './close-sub-menu';\n\nfunction closeSubMenuHandler(items) {\n  // Close open dropdowns when clicking outside of the menu\n  const page = document.getElementById('page');\n  page.addEventListener('click', (e) => {\n    // If the click is inside the menu, bail\n    if (e.target.closest('.menu-items')) {\n      return;\n    }\n\n    items.forEach((li) => {\n      closeSubMenu(li);\n    });\n  });\n\n  // Close open dropdown when pressing escape\n  items.forEach((li) => {\n    li.addEventListener('keydown', (keydownMouseoverEvent) => {\n      if (keydownMouseoverEvent.key === 'Escape') {\n        closeSubMenu(li);\n      }\n    });\n  });\n\n  // Close other dropdowns when opening a new one\n  items.forEach((li) => {\n    // Bail if no dropdown\n    if (!li.classList.contains('menu-item-has-children')) {\n      return;\n    }\n\n    const dropdownToggle = li.querySelector('.dropdown-toggle');\n    const sameLevelDropdowns = li.parentNode.querySelectorAll(':scope > .menu-item-has-children');\n\n    // Add event listener to dropdown toggle\n    dropdownToggle.addEventListener('click', () => {\n      // We want to close other dropdowns only when a new one is opened\n      if (!dropdownToggle.classList.contains('toggled-on')) {\n        return;\n      }\n\n      sameLevelDropdowns.forEach((sameLevelDropdown) => {\n        if (sameLevelDropdown !== li) {\n          // Close all other sub level dropdowns\n          sameLevelDropdown.querySelectorAll('.menu-item').forEach((subLi) => {\n            closeSubMenu(subLi);\n          });\n          // Close other same level dropdowns\n          closeSubMenu(sameLevelDropdown);\n        }\n      });\n    });\n  });\n}\nexport default closeSubMenuHandler;\n","function closeSubMenu(li) {\n  // If menu item is not a dropdown then do nothing\n  if (!li.querySelector('.dropdown-toggle') && !li.querySelector('.sub-menu')) {\n    return;\n  }\n\n  // Get the dropdown-button\n  const dropdownButton = li.querySelector('.dropdown-toggle');\n\n  // Get the submenu\n  const subMenu = li.querySelector('.sub-menu');\n\n  // If the dropdown-menu is not open, bail\n  if (!subMenu.classList.contains('toggled-on')) {\n    return;\n  }\n\n  // Remove the open class from the dropdown-menu\n  subMenu.classList.remove('toggled-on');\n\n  // Remove the open class from the dropdown-button\n  dropdownButton.classList.remove('toggled-on');\n\n  // Remove the aria-expanded attribute from the dropdown-button\n  dropdownButton.setAttribute('aria-expanded', 'false');\n\n  // Get the link text that is children of this item\n  const linkText = dropdownButton.innerHTML;\n\n  // Add the aria-label to the dropdown button\n  // eslint-disable-next-line camelcase, no-undef\n  dropdownButton.setAttribute('aria-label', `${air_light_screenReaderText.expand_for} ${linkText}`);\n}\n\nexport default closeSubMenu;\n","// Add proper link labels for screen readers\nfunction a11yAddDropdownToggleLabelsClick(items) {\n  items.forEach((li) => {\n    // If .dropdown-toggle does not exist then do nothing\n    if (!li.querySelector('.dropdown-toggle')) {\n      return;\n    }\n\n    // Add helper class to dropdown-toggle\n    li.querySelector('.dropdown-toggle').classList.add('menu-item-clickable');\n\n    // Remove .dropdown-toggle class\n    li.querySelector('.dropdown-toggle').classList.remove('dropdown-toggle');\n\n    // Get the dropdown-button\n    const dropdownButton = li.querySelector('.menu-item-clickable');\n\n    // Get the link text that is children of this item\n    const linkText = dropdownButton.innerHTML;\n    // Add the aria-label to the dropdown button\n    // eslint-disable-next-line camelcase, no-undef\n    dropdownButton.setAttribute('aria-label', `${air_light_screenReaderText.expand_for} ${linkText}`);\n  });\n}\n\nexport default a11yAddDropdownToggleLabelsClick;\n","// Import required modules\nimport addMultipleEventListeners from './add-multiple-event-listeners';\n\n// Accessible keyboard navigation for dropdown menus\nfunction a11yDropdownMenuKeyboardNavigationClick(items, focusableElements) {\n  focusableElements.forEach((item) => {\n    item.addEventListener('keyup', (e) => {\n      // Get this item\n      const thisElement = e.target;\n\n      // Get this menu-item\n      // eslint-disable-next-line no-unused-vars\n      const thisMenuItem = thisElement.parentNode;\n\n      // Close previous dropdown if this parent contains id main-menu\n      if (thisElement.parentNode.parentNode.id === 'main-menu' || (thisElement.classList.contains('button-nav') && thisElement.parentNode.parentNode.id === 'main-menu')) {\n        // If we have previous item\n        if (thisElement.parentNode.previousElementSibling) {\n          // Get the previous item\n          const previousItem = thisElement.parentNode.previousElementSibling;\n          // Get main level sub-menu\n          const mainLevelSubMenu = previousItem.querySelector('.sub-menu');\n\n          // If sub-menu found, close nested sub-menus first\n          if (mainLevelSubMenu && mainLevelSubMenu.querySelectorAll('.menu-item-has-children')) {\n            mainLevelSubMenu.querySelectorAll('.menu-item-has-children').forEach((subMenu) => {\n              // Get the previous item's dropdown\n              const previousItemDropdownToggle = subMenu.querySelector('.dropdown-toggle');\n              const previousItemDropdown = subMenu.querySelector('.sub-menu');\n\n              // Remove toggled-on class from previous item button\n              previousItemDropdownToggle.classList.remove('toggled-on');\n\n              // Remove toggled-on class from previous sibling\n              previousItemDropdown.classList.remove('toggled-on');\n\n              // Change toggle button aria-label\n              // eslint-disable-next-line camelcase, no-undef\n              previousItemDropdownToggle.setAttribute('aria-label', `${air_light_screenReaderText.expand_for} ${previousItemDropdownToggle.innerText}`);\n\n              // Change toggle button aria-expanded\n              previousItemDropdownToggle.setAttribute('aria-expanded', 'false');\n            });\n          }\n\n          // Close main level sub-menu\n          const previousItemDropdownToggle = previousItem.querySelector('.dropdown-toggle');\n          const previousItemDropdown = previousItem.querySelector('.sub-menu');\n\n          if (previousItemDropdownToggle && previousItemDropdown) {\n            // Remove toggled-on class from previous item button\n            previousItemDropdownToggle.classList.remove('toggled-on');\n\n            // Remove toggled-on class from previous sibling\n            previousItemDropdown.classList.remove('toggled-on');\n\n            // Change toggle button aria-label\n            // eslint-disable-next-line camelcase, no-undef\n            previousItemDropdownToggle.setAttribute('aria-label', `${air_light_screenReaderText.expand_for} ${previousItemDropdownToggle.innerText}`);\n\n            // Change toggle button aria-expanded\n            previousItemDropdownToggle.setAttribute('aria-expanded', 'false');\n          }\n        }\n      }\n    });\n\n    // NVDA supported keyboard navigation (NVDA and mobile need click event to work)\n    addMultipleEventListeners(item, ['click', 'keydown', 'keypress'], (e) => {\n      // Get this link or button\n      const thisElement = e.target;\n\n      // Define the elements of this dropdown\n      const firstDropdown = thisElement.parentNode.parentNode.parentNode.querySelector('.sub-menu');\n      const thisDropdown = thisElement.nextElementSibling;\n      const dropdownToggleButton = thisElement.parentNode.parentNode.parentNode.querySelector('.dropdown-toggle');\n\n      // Open navigation on Enter, e.type click is for NVDA\n      if (e.key === 'Enter' || e.type === 'click') {\n        // If this item is a hyperlink, do nothing. We want to use Enter only with buttons\n        if (thisElement.tagName === 'A') {\n          return;\n        }\n\n        // Get the text of button\n        const linkLabel = thisElement.innerText;\n\n        // Toggle toggled-on class\n        thisElement.classList.toggle('toggled-on');\n\n        // If aria-expanded is false, set it to true\n        if (thisElement.getAttribute('aria-expanded') === 'false') {\n          // Set aria-expanded to true\n          thisElement.setAttribute('aria-expanded', 'true');\n\n          // Set aria-label of the dropdown button\n          // eslint-disable-next-line camelcase, no-undef\n          thisElement.setAttribute('aria-label', `${air_light_screenReaderText.collapse_for} ${linkLabel}`);\n        } else {\n          // Set aria-expanded to false\n          thisElement.setAttribute('aria-expanded', 'false');\n\n          // Set aria-label of the dropdown button\n          // eslint-disable-next-line camelcase, no-undef\n          thisElement.setAttribute('aria-label', `${air_light_screenReaderText.expand_for} ${linkLabel}`);\n        }\n\n        // Toggle the dropdown\n        if (thisDropdown && !thisDropdown.classList.contains('toggled-on')) {\n          // Add toggled-on class to this dropdown\n          thisDropdown.classList.add('toggled-on');\n        } else {\n          // Remove toggled-on class from this dropdown\n          // eslint-disable-next-line no-lonely-if\n          if (thisDropdown) {\n            thisDropdown.classList.remove('toggled-on');\n          }\n        }\n      }\n\n      // Close navigation on Escape\n      if (e.key === 'Escape') {\n        // Close mobile nav if no sub-menu is open\n        if (thisElement.parentNode.parentNode.id === 'main-menu' && !thisElement.parentNode.classList.contains('toggled-on')) {\n          document.body.classList.remove('js-nav-active');\n\n          // Move focus back to nav-toggle\n          document.getElementById('nav-toggle').focus();\n        }\n\n        // If we're on main level and nav item is not open, do nothing\n        if (thisElement.parentNode.parentNode.id === 'main-menu' && !thisElement.parentNode.classList.contains('toggled-on')) {\n          return;\n        }\n\n        // Remove toggled-on classes from this dropdown\n        firstDropdown.classList.remove('toggled-on');\n\n        // Set aria expanded attribute to false\n        dropdownToggleButton.setAttribute('aria-expanded', 'false');\n\n        // Remove toggled-on\n        dropdownToggleButton.classList.remove('toggled-on');\n\n        // Get the link label of dropdown link\n        const linkLabel = thisElement.parentNode.querySelector('.dropdown-item').innerText;\n\n        // Set aria label attribute\n        // eslint-disable-next-line camelcase, no-undef\n        dropdownToggleButton.setAttribute('aria-label', `${air_light_screenReaderText.expand_for} ${linkLabel}`);\n\n        // If we're on button, add aria-expanded to false\n        if (thisElement.classList.contains('dropdown-toggle')) {\n          thisElement.setAttribute('aria-expanded', 'false');\n\n          // Set aria-label of the dropdown button\n          // eslint-disable-next-line camelcase, no-undef\n          thisElement.setAttribute('aria-label', `${air_light_screenReaderText.expand_for} ${linkLabel}`);\n        }\n\n        // Move focus back to previous .dropdown-toggle, but only if we're not on main level\n        if (thisElement.parentNode.parentNode.id !== 'main-menu') {\n          // Delay toggling for NVDA for 100 ms\n          setTimeout(() => {\n            dropdownToggleButton.focus();\n          }, 100);\n        }\n      }\n\n      // If no arrow keys used, do not continue\n      if (e.key !== 'ArrowUp' && e.key !== 'ArrowDown' && e.key !== 'ArrowLeft' && e.key !== 'ArrowRight') {\n        return;\n      }\n\n      // Arrow keys\n      switch (e.code) {\n      // ArrowUp\n      case 'ArrowUp':\n\n        // Stop propagation\n        e.stopPropagation();\n\n        // Stop scrolling\n        e.preventDefault();\n\n        // If we're on the sub-menu, move up\n        if (thisElement.parentNode.parentNode.previousElementSibling && thisElement.parentNode.parentNode.previousElementSibling.classList.contains('dropdown-toggle')) {\n          // Focus to the previous link\n          thisElement.parentNode.parentNode.previousElementSibling.focus();\n        }\n\n        // If this is a .dropdown-toggle button and aria-expanded is true, close the dropdown\n        if (thisElement.classList.contains('dropdown-toggle') && thisElement.getAttribute('aria-expanded') === 'true') {\n          // Remove toggled-on class from this dropdown\n          thisDropdown.classList.remove('toggled-on');\n          thisElement.classList.remove('toggled-on');\n\n          // Set aria-expanded attribute to false\n          thisElement.setAttribute('aria-expanded', 'false');\n\n          // Get the link label of .dropdown link\n          const linkLabel = thisElement.parentNode.querySelector('.dropdown-item').innerText;\n\n          // Set aria-label of the dropdown button\n          // eslint-disable-next-line camelcase, no-undef\n          thisElement.setAttribute('aria-label', `${air_light_screenReaderText.expand_for} ${linkLabel}`);\n\n          // Move focus back to previous .dropdown-toggle\n          dropdownToggleButton.focus();\n        }\n\n        // If this is a correct element, focus to the previous link\n        if (thisElement.tagName === 'A' || thisElement.tagName === 'BUTTON') {\n          // If there is no previous items, bail\n          if (!thisElement.parentNode.previousElementSibling) {\n            return;\n          }\n\n          // Get the previous link\n          const previousLink = thisElement.parentNode.previousElementSibling.querySelector('a');\n\n          // Get .dropdown-toggle element\n          const previousToggle = thisElement.parentNode.previousElementSibling.querySelector('.dropdown-toggle');\n\n          // If previous element is .dropdown-toggle element, focus to it\n          if (previousToggle && !thisElement.querySelector('.dropdown-toggle')) {\n            previousToggle.focus();\n          } else {\n            // If previous element is a link, focus to it\n            previousLink.focus();\n          }\n        }\n\n        break;\n\n      // ArrowDown\n      case 'ArrowDown':\n        // Stop propagation\n        e.stopPropagation();\n\n        // Stop scrolling\n        e.preventDefault();\n\n        // If we're on the sub-menu, move down\n        if (thisElement.parentNode.parentNode.nextElementSibling && thisElement.parentNode.parentNode.nextElementSibling.classList.contains('dropdown-toggle')) {\n          // Focus to the next link\n          thisElement.parentNode.parentNode.nextElementSibling.focus();\n        }\n\n        // If this is a .dropdown-toggle button and aria-expanded is true, move down\n        if (thisElement.classList.contains('dropdown-toggle') && thisElement.getAttribute('aria-expanded') === 'true') {\n          // Focus to the next link\n          thisElement.parentNode.querySelector('.sub-menu').querySelector('li:first-child').querySelector('a').focus();\n        }\n\n        // If this is a .dropdown-toggle button and aria-expanded is false, open sub-menu\n        // (if we are not inside sub-menu)\n        if (thisElement.classList.contains('dropdown-toggle') && thisElement.getAttribute('aria-expanded') === 'false' && !thisElement.parentNode.parentNode.classList.contains('sub-menu')) {\n          // Open sub-menu\n          thisElement.click();\n\n          // Focus to the next link under sub-menu\n          thisElement.parentNode.querySelector('.sub-menu').querySelector('li:first-child').querySelector('a').focus();\n\n          // Don't do anything else\n          return;\n        }\n\n        // If we are in fact in sub menu, move to next link\n        if (thisElement.parentNode.parentNode.classList.contains('sub-menu')) {\n          // Focus to the next link or .dropdown-toggle\n          // Generally focus the next link\n          if (thisElement.parentNode.nextElementSibling.querySelector(':scope > a')) {\n            thisElement.parentNode.nextElementSibling.querySelector(':scope > a').focus();\n          } else {\n            // If there is no next link, focus to the next .dropdown-toggle\n            thisElement.parentNode.nextElementSibling.querySelector('.dropdown-toggle').focus();\n          }\n        }\n\n        // If this is a correct element, focus to the next link\n        if ((thisElement.tagName === 'A' || thisElement.tagName === 'BUTTON') && !thisElement.classList.contains('dropdown-toggle')) {\n          // If there is no next items, bail\n          if (!thisElement.parentNode.nextElementSibling) {\n            return;\n          }\n\n          // Get the next link\n          const nextLink = thisElement.parentNode.nextElementSibling.querySelector('a');\n\n          // Get .dropdown-toggle element\n          let nextToggle = thisElement.parentNode.nextElementSibling.querySelector('.dropdown-toggle');\n\n          // If this has class .dropdown-item, jump to the next .dropdown-toggle\n          if (thisElement.classList.contains('dropdown-item')) {\n          // If there is a toggle\n            if (thisElement.nextElementSibling) {\n            // Get the dropdown-toggle element\n              nextToggle = thisElement.nextElementSibling;\n\n              // If next element is .dropdown-toggle element, focus to it\n              if (nextToggle) {\n                nextToggle.focus();\n              }\n            }\n          }\n\n          // If next element is .dropdown-toggle element, focus to it\n          if (nextToggle && !thisElement.querySelector('.dropdown-toggle')) {\n            nextToggle.focus();\n          } else {\n            // If next element is a link, focus to it\n            nextLink.focus();\n          }\n        }\n\n        break;\n\n        // ArrowLeft\n      case 'ArrowLeft':\n\n        // Stop propagation\n        e.stopPropagation();\n\n        // Stop scrolling\n        e.preventDefault();\n\n        // If we are on the first link, move to the dropdown-toggle and close menu\n        if (thisElement.parentNode.previousElementSibling === null && thisElement.parentNode.parentNode.id !== 'main-menu') {\n          // Focus to the previous link\n          thisElement.parentNode.parentNode.parentNode.querySelector('.dropdown-toggle').focus();\n\n          // Close the dropdown\n          thisElement.parentNode.parentNode.parentNode.querySelector('.dropdown-toggle').click();\n\n          // Don't do anything else\n          return;\n        }\n\n        // If this is a .dropdown-toggle button and aria-expanded is true, move left\n        if (thisElement.parentNode.previousElementSibling && thisElement.classList.contains('dropdown-toggle') && thisElement.getAttribute('aria-expanded') === 'true' && thisElement.parentNode.parentNode.id !== 'main-menu') {\n          // Focus to the previous link\n          thisElement.parentNode.previousElementSibling.querySelector('a').focus();\n        }\n\n        // If this is a .dropdown-toggle button and aria-expanded is false, close the dropdown\n        if (thisElement.classList.contains('dropdown-toggle') && thisElement.getAttribute('aria-expanded') === 'false' && thisElement.parentNode.parentNode.id !== 'main-menu') {\n          // Remove toggled-on class from this dropdown\n          thisDropdown.classList.remove('toggled-on');\n\n          // Set aria-expanded attribute to false\n          thisElement.setAttribute('aria-expanded', 'false');\n\n          // Get the link label of .dropdown link\n          const linkLabel = thisElement.parentNode.querySelector('.dropdown-item').innerText;\n\n          // Set aria-label of the dropdown button\n          // eslint-disable-next-line camelcase, no-undef\n          thisElement.setAttribute('aria-label', `${air_light_screenReaderText.expand_for} ${linkLabel}`);\n\n          // Move focus back to previous .dropdown-toggle\n          dropdownToggleButton.focus();\n        }\n\n        // If this is a correct element, focus to the previous link\n        if (thisElement.tagName === 'A' || thisElement.tagName === 'BUTTON') {\n          // If this is a .dropdown-toggle button and aria-expanded is false,\n          // move to the link directly before it\n          if (thisElement.previousElementSibling && thisElement.classList.contains('dropdown-toggle') && thisElement.getAttribute('aria-expanded') === 'false') {\n            // Focus to the previous link\n            thisElement.previousElementSibling.focus();\n\n            // Don't do anything else\n            return;\n          }\n\n          // If there is no previous items, bail\n          if (!thisElement.parentNode.previousElementSibling) {\n            return;\n          }\n\n          // Get the previous link\n          const previousLink = thisElement.parentNode.previousElementSibling.querySelector('a');\n\n          // Get .dropdown-toggle element\n          const previousToggle = thisElement.parentNode.previousElementSibling.querySelector('.dropdown-toggle');\n\n          // If previous element is .dropdown-toggle element, focus to it\n          if (previousToggle) {\n            previousToggle.focus();\n          } else {\n            // If previous element is a link, focus to it\n            previousLink.focus();\n          }\n        }\n\n        break;\n\n        // ArrowRight\n      case 'ArrowRight':\n\n        // Stop propagation\n        e.stopPropagation();\n\n        // Stop scrolling\n        e.preventDefault();\n\n        // If this is a .dropdown-toggle button and aria-expanded is true, move right\n        if (thisElement.classList.contains('dropdown-toggle') && thisElement.getAttribute('aria-expanded') === 'true' && thisElement.parentNode.parentNode.id !== 'main-menu') {\n          // Focus to the next link\n          thisElement.parentNode.querySelector('.sub-menu').querySelector('li:first-child').querySelector('a').focus();\n        }\n\n        // If this has class .dropdown-item, jump to the next .dropdown-toggle\n        if (thisElement.nextElementSibling) {\n          thisElement.nextElementSibling.focus();\n\n          // Disable other actions if this is a .dropdown-item\n          if (thisElement.classList.contains('dropdown-item')) {\n            return;\n          }\n        }\n\n        // If this is a .dropdown-toggle button and aria-expanded is false, open sub-menu\n        if (thisElement.classList.contains('dropdown-toggle') && thisElement.getAttribute('aria-expanded') === 'false' && thisElement.parentNode.parentNode.id !== 'main-menu') {\n          // Open sub-menu\n          thisElement.click();\n\n          // Do nothing else\n          return;\n        }\n\n        // If this is a dropdown-toggle button and aria-expanded is true, move right\n        if (thisElement.classList.contains('dropdown-toggle') && thisElement.getAttribute('aria-expanded') === 'true' && thisElement.parentNode.parentNode.id !== 'main-menu') {\n          // Focus to the next link\n          thisElement.parentNode.querySelector('.sub-menu').querySelector('li:first-child').querySelector('a').focus();\n\n          // Don't do anything else\n          return;\n        }\n\n        // If this is a correct element, focus to the previous link\n        if (thisElement.tagName === 'A' || thisElement.tagName === 'BUTTON') {\n          // If there is no next items, bail\n          if (!thisElement.parentNode.nextElementSibling) {\n            return;\n          }\n\n          // Get the next link\n          const nextLink = thisElement.parentNode.nextElementSibling.querySelector('a');\n\n          // Get .dropdown-toggle element\n          const nextToggle = thisElement.parentNode.nextElementSibling.querySelector('.dropdown-toggle');\n\n          // If next element is .dropdown-toggle element, focus to it\n          if (nextToggle) {\n            nextToggle.focus();\n          } else {\n            // If next element is a link, focus to it\n            nextLink.focus();\n          }\n        }\n\n        break;\n\n      default:\n        break;\n      }\n    });\n  });\n}\n\nexport default a11yDropdownMenuKeyboardNavigationClick;\n"],"names":[],"version":3,"file":"front-end.js.map"}